{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOA8DeA,EAvDH,WAAO,IAAD,EACsBC,mBAAS,GAD/B,gCAE0BA,mBAAS,KAFnC,6BAIhB,OACE,qBAAKC,UAAU,MAAf,SACE,0CCDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.257e45d6.chunk.js","sourcesContent":["import './App.css';\r\nimport React, { useState } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinus, faPlus, faPlay, faUndo } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst App = () => {\r\n  const [breakLength, setBreakLength] = useState(5);\r\n  const [sessionLength, setSessionLength] = useState(25);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>hello</h1>\r\n      {/* <div className=\"flex\">\r\n      <div id='break-label' className='timer-container'>\r\n            <h1>Break Length</h1>\r\n            <div className='action-wrapper'>\r\n                <button id='break-decrement' onClick={() => setBreakLength(breakLength-1)}>\r\n                    <FontAwesomeIcon icon={faMinus}></FontAwesomeIcon>\r\n                </button>\r\n                <span id=\"break-length\">{breakLength}</span>\r\n                <button id='break-increment' onClick={() => setBreakLength(breakLength+1)}>\r\n                <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        \r\n        <div id='session-label' className='timer-container'>\r\n            <h1>Session Length</h1>\r\n            <div className='action-wrapper'>\r\n                <button id='session-decrement' onClick={() => setSessionLength(sessionLength-1)}>\r\n                    <FontAwesomeIcon icon={faMinus}></FontAwesomeIcon>\r\n                </button>\r\n                <span id=\"session-length\">{sessionLength}</span>\r\n                <button id='session-increment' onClick={() => setSessionLength(sessionLength+1)}>\r\n                <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"timer-label\">\r\n      <div className=\"clock-container\">\r\n        <h1>Session</h1>\r\n        <span id=\"time-left\">25:00</span>\r\n        <div className='flex'>\r\n          <button id=\"start_stop\">\r\n          <FontAwesomeIcon icon={faPlay}></FontAwesomeIcon>\r\n\r\n          </button>\r\n          <button id=\"reset\">\r\n          <FontAwesomeIcon icon={faUndo}></FontAwesomeIcon>\r\n\r\n          </button>\r\n\r\n        </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}